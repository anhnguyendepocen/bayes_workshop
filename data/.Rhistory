library(eRm)
##Infit
##Rasch
ifmat_rasch <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 100 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.rasch(ss, is)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_rasch <- rbind(ifmat_rasch, fs$i.infitMSQ)
ifmat_rasch$Infit_0713[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.7)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.3))
ifmat_rasch$Infit_0812[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.8)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.2))
ifmat_rasch$Infit_085115[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.85)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.15))
ifmat_rasch$ss[nrow(ifmat_rasch)] <- ss
ifmat_rasch$is[nrow(ifmat_rasch)] <- is
}
}
}
View(ifmat_rasch)
[ncol(ifmat_rasch[nrow])]
ncol(ifmat_rasch[nrow])
ncol(ifmat_rasch[nrow,])
ncol(ifmat_rasch)
ncol(ifmat_rasch[nrow])
ncol(ifmat_rasch[nrow(ifmat_rasch)])
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-2,]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-2,]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-1,-1]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[,-1]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
View(ifmat_rasch)
View(ifmat_rasch)
ifmat_rasch <- ifmat_rasch[,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
View(ifmat_rasch)
View(ifmat_rasch)
ifmat_rasch <- ifmat_rasch[,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
View(ifmat_rasch)
ncol(ifmat_rasch[nrow(ifmat_rasch),])
ifmat_rasch <- ifmat_rasch[-4,-3]
ncol(ifmat_rasch[nrow(ifmat_rasch),])
library(eRm)
##Infit
##Rasch
ifmat_rasch <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.rasch(ss, is)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_rasch <- rbind(ifmat_rasch, fs$i.infitMSQ)
ifmat_rasch$Infit_0713[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.7)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.3))
ifmat_rasch$Infit_0812[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.8)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.2))
ifmat_rasch$Infit_085115[nrow(ifmat_rasch)] <- (sum(ifmat_rasch[nrow(ifmat_rasch),1:is]<0.85)+sum(ifmat_rasch[nrow(ifmat_rasch),1:is]>1.15))
ifmat_rasch$ss[nrow(ifmat_rasch)] <- ss
ifmat_rasch$is[nrow(ifmat_rasch)] <- is
ifmat_rasch$ni[nrow(ifmat_rasch)] <- ncol(ifmat_rasch[nrow(ifmat_rasch),])
}
}
}
ifmat_rasch <- ifmat_rasch[-1,]
summary(ifmat_rasch_Infit_0713)
summary(ifmat_rasch_Infit_0812)
summary(ifmat_rasch_Infit_085115)
write.table(ifmat_rasch, "C:/Users/petere/Desktop/ifmat_rasch_1000_3crit.txt", sep="\t")
##2pl
ifmat_2pl <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.30)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl <- rbind(ifmat_2pl, fs$i.infitMSQ)
ifmat_2pl$Infit_0713[nrow(ifmat_2pl)] <- (sum(ifmat_2pl[nrow(ifmat_2pl),1:is]<0.7)+sum(ifmat_2pl[nrow(ifmat_2pl),1:is]>1.3))
ifmat_2pl$Infit_0812[nrow(ifmat_2pl)] <- (sum(ifmat_2pl[nrow(ifmat_2pl),1:is]<0.8)+sum(ifmat_2pl[nrow(ifmat_2pl),1:is]>1.2))
ifmat_2pl$Infit_085115[nrow(ifmat_2pl)] <- (sum(ifmat_2pl[nrow(ifmat_2pl),1:is]<0.85)+sum(ifmat_2pl[nrow(ifmat_2pl),1:is]>1.15))
ifmat_2pl$ss[nrow(ifmat_2pl)] <- ss
ifmat_2pl$is[nrow(ifmat_2pl)] <- is
ifmat_2pl$ni[nrow(ifmat_2pl)] <- ncol(ifmat_2pl[nrow(ifmat_2pl),])
}
}
}
ifmat_2pl <- ifmat_2pl[-1,]
summary(ifmat_2pl_Infit_0713)
summary(ifmat_2pl_Infit_0812)
summary(ifmat_2pl_Infit_085115)
write.table(ifmat_2pl, "C:/Users/petere/Desktop/ifmat_2pl_1000_3crit.txt", sep="\t")
##LD
ifmat_ld <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.1)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld <- rbind(ifmat_ld, fs$i.infitMSQ)
ifmat_ld$Infit_0713[nrow(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.7)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.3))
ifmat_ld$Infit_0812[nrow(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.8)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.2))
ifmat_ld$Infit_085115[nrow(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.85)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.15))
ifmat_ld$Infit_085115[ncol(ifmat_ld)] <- (sum(ifmat_ld[nrow(ifmat_ld),1:is]<0.85)+sum(ifmat_ld[nrow(ifmat_ld),1:is]>1.15))
ifmat_ld$ss[nrow(ifmat_ld)] <- ss
ifmat_ld$is[nrow(ifmat_ld)] <- is
ifmat_ld$ni[nrow(ifmat_ld)] <- ncol(ifmat_ld[nrow(ifmat_ld),])
}
}
}
ifmat_ld <- ifmat_ld[-1,]
summary(ifmat_ld$Infit_0713)
summary(ifmat_ld$Infit_0812)
summary(ifmat_ld$Infit_085115)
write.table(ifmat_ld, "C:/Users/petere/Desktop/ifmat_ld_1000_3crit.txt", sep="\t")
summary(ifmat_rasch_Infit_0713)
summary(ifmat_rasch$Infit_085115)
##2pld50
ifmat_2pl_d50 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.50)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl_d50 <- rbind(ifmat_2pl_d50, fs$i.infitMSQ)
ifmat_2pl_d50$Infit_0713[nrow(ifmat_2pl_d50)] <- (sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]<0.7)+sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]>1.3))
ifmat_2pl_d50$Infit_0812[nrow(ifmat_2pl_d50)] <- (sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]<0.8)+sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]>1.2))
ifmat_2pl_d50$Infit_085115[nrow(ifmat_2pl_d50)] <- (sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]<0.85)+sum(ifmat_2pl_d50[nrow(ifmat_2pl_d50),1:is]>1.15))
ifmat_2pl_d50$ss[nrow(ifmat_2pl_d50)] <- ss
ifmat_2pl_d50$is[nrow(ifmat_2pl_d50)] <- is
ifmat_2pl_d50$ni[nrow(ifmat_2pl_d50)] <- ncol(ifmat_2pl_d50[nrow(ifmat_2pl_d50),])
}
}
}
ifmat_2pl_d50 <- ifmat_2pl_d50[-1,]
summary(ifmat_2pl_d50$Infit_0713)
summary(ifmat_2pl_d50$Infit_0812)
summary(ifmat_2pl_d50$Infit_085115)
write.table(ifmat_2pl_d50, "C:/Users/petere/Desktop/ifmat_2pl_d50_1000_3crit.txt", sep="\t")
##LD_co03
ifmat_ld_co03 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.3)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld_co03 <- rbind(ifmat_ld_co03, fs$i.infitMSQ)
ifmat_ld_co03$Infit_0713[nrow(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.7)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.3))
ifmat_ld_co03$Infit_0812[nrow(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.8)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.2))
ifmat_ld_co03$Infit_085115[nrow(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.85)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.15))
ifmat_ld_co03$Infit_085115[ncol(ifmat_ld_co03)] <- (sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]<0.85)+sum(ifmat_ld_co03[nrow(ifmat_ld_co03),1:is]>1.15))
ifmat_ld_co03$ss[nrow(ifmat_ld_co03)] <- ss
ifmat_ld_co03$is[nrow(ifmat_ld_co03)] <- is
ifmat_ld_co03$ni[nrow(ifmat_ld_co03)] <- ncol(ifmat_ld_co03[nrow(ifmat_ld_co03),])
}
}
}
ifmat_ld_co03 <- ifmat_ld_co03[-1,]
summary(ifmat_ld_co03$Infit_0713)
summary(ifmat_ld_co03$Infit_0812)
summary(ifmat_ld_co03$Infit_085115)
write.table(ifmat_ld_co03, "C:/Users/petere/Desktop/ifmat_ld_co03_1000_3crit.txt", sep="\t")
##2pld70
ifmat_2pl_d70 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.70)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl_d70 <- rbind(ifmat_2pl_d70, fs$i.infitMSQ)
ifmat_2pl_d70$Infit_0713[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.7)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.3))
ifmat_2pl_d70$Infit_0812[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.8)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.2))
ifmat_2pl_d70$Infit_085115[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.85)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.15))
ifmat_2pl_d70$ss[nrow(ifmat_2pl_d70)] <- ss
ifmat_2pl_d70$is[nrow(ifmat_2pl_d70)] <- is
ifmat_2pl_d70$ni[nrow(ifmat_2pl_d70)] <- ncol(ifmat_2pl_d70[nrow(ifmat_2pl_d70),])
}
}
}
ifmat_2pl_d70 <- ifmat_2pl_d70[-1,]
summary(ifmat_2pl_d70$Infit_0713)
summary(ifmat_2pl_d70$Infit_0812)
summary(ifmat_2pl_d70$Infit_085115)
write.table(ifmat_2pl_d70, "C:/Users/petere/Desktop/ifmat_2pl_d70_1000_3crit.txt", sep="\t")
##LD_co05
ifmat_ld_co05 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.5)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld_co05 <- rbind(ifmat_ld_co05, fs$i.infitMSQ)
ifmat_ld_co05$Infit_0713[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.7)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.3))
ifmat_ld_co05$Infit_0812[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.8)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.2))
ifmat_ld_co05$Infit_085115[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.85)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.15))
ifmat_ld_co05$ss[nrow(ifmat_ld_co05)] <- ss
ifmat_ld_co05$is[nrow(ifmat_ld_co05)] <- is
ifmat_ld_co05ni[nrow(ifmat_ld_co05)] <- ncol(ifmat_ld_co05[nrow(ifmat_ld_co05),])
}
}
}
ifmat_ld_co05 <- ifmat_ld_co05[-1,]
summary(ifmat_ld_co05$Infit_0713)
summary(ifmat_ld_co05$Infit_0812)
summary(ifmat_ld_co05$Infit_085115)
write.table(ifmat_ld_co05, "C:/Users/petere/Desktop/ifmat_ld_co05_1000_3crit.txt", sep="\t")
##2pld70
ifmat_2pl_d70 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.2pl(ss, is, discrim = 0.70)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_2pl_d70 <- rbind(ifmat_2pl_d70, fs$i.infitMSQ)
ifmat_2pl_d70$Infit_0713[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.7)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.3))
ifmat_2pl_d70$Infit_0812[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.8)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.2))
ifmat_2pl_d70$Infit_085115[nrow(ifmat_2pl_d70)] <- (sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]<0.85)+sum(ifmat_2pl_d70[nrow(ifmat_2pl_d70),1:is]>1.15))
ifmat_2pl_d70$ss[nrow(ifmat_2pl_d70)] <- ss
ifmat_2pl_d70$is[nrow(ifmat_2pl_d70)] <- is
ifmat_2pl_d70$ni[nrow(ifmat_2pl_d70)] <- ncol(ifmat_2pl_d70[nrow(ifmat_2pl_d70),])
}
}
}
ifmat_2pl_d70 <- ifmat_2pl_d70[-1,]
summary(ifmat_2pl_d70$Infit_0713)
summary(ifmat_2pl_d70$Infit_0812)
summary(ifmat_2pl_d70$Infit_085115)
write.table(ifmat_2pl_d70, "C:/Users/petere/Desktop/ifmat_2pl_d70_1000_3crit.txt", sep="\t")
##LD_co05
ifmat_ld_co05 <- data.frame(matrix(NA,  ncol = 50))
n <- c(100, 300, 1000) #Sample size
i <- c(10, 20, 50) #Item set size
m <- 1000 #Number of sampled data matrices per ss/is combination
for(r in 1:length(n)){
ss <- n[r]
for (t in 1:length(i)){
is <- i[t]
for (s in 1:m){
sm <- sim.locdep(ss, is, it.cor = 0.5)
rm <- RM(sm) # Estimate Rasch parameters
pp <- person.parameter(rm) #Read person parameters
fs <- itemfit(pp) #Compute fit statistics
ifmat_ld_co05 <- rbind(ifmat_ld_co05, fs$i.infitMSQ)
ifmat_ld_co05$Infit_0713[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.7)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.3))
ifmat_ld_co05$Infit_0812[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.8)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.2))
ifmat_ld_co05$Infit_085115[nrow(ifmat_ld_co05)] <- (sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]<0.85)+sum(ifmat_ld_co05[nrow(ifmat_ld_co05),1:is]>1.15))
ifmat_ld_co05$ss[nrow(ifmat_ld_co05)] <- ss
ifmat_ld_co05$is[nrow(ifmat_ld_co05)] <- is
ifmat_ld_co05$ni[nrow(ifmat_ld_co05)] <- ncol(ifmat_ld_co05[nrow(ifmat_ld_co05),])
}
}
}
ifmat_ld_co05 <- ifmat_ld_co05[-1,]
summary(ifmat_ld_co05$Infit_0713)
summary(ifmat_ld_co05$Infit_0812)
summary(ifmat_ld_co05$Infit_085115)
write.table(ifmat_ld_co05, "C:/Users/petere/Desktop/ifmat_ld_co05_1000_3crit.txt", sep="\t")
.20^2+.15^2+.10^2+.10^2
1-.0825
.30^2+.25^2+.20^2+.20^2
1-.2325
1-(.50^2)
1-(.40^2)
1-(.60^2)
1-(.70^2)
1-(.30^2)
## 0 Software and data preparation
# Set working directory
setwd("C:/Users/petere/Desktop/SEM_WS")
risk <- read.table("riskdata.txt")
write.csv(risk, file="riskdata.csv")
# Read data from SPSS file into R
risk <- read.spss("data/Datafile Workshops.sav",
use.value.labels=TRUE,
max.value.labels=Inf,
to.data.frame=TRUE)
#View(risk)
attach(risk)
# 0.1 Prepare aggregate variables
# of risk behaviour
# Generate z-scores for variables using the scale() function
risk$ZSex3 <- scale(as.numeric(Sex3),
center = TRUE,
scale = TRUE)
risk$ZSex4 <- scale(as.numeric(Sex4),
center = TRUE,
scale = TRUE)
risk$ZTob3 <- scale(as.numeric(Tobacco3),
center = TRUE,
scale = TRUE)
risk$ZTob4 <- scale(as.numeric(Tobacco4),
center = TRUE,
scale = TRUE)
risk$ZAlc3 <- scale(as.numeric(Alcohol3),
center = TRUE,
scale = TRUE)
risk$ZAlc4 <- scale(as.numeric(Alcohol4),
center = TRUE,
scale = TRUE)
risk$ZMar1 <- scale(as.numeric(Drugs1),
center = TRUE,
scale = TRUE)
# Build averages
risk$AvrSex <- (risk$ZSex3+ risk$ZSex4)/2 # Build average for Sex
risk$AvrTob <- (risk$ZTob3 + risk$ZTob4)/2 # Build average for TObacco
risk$AvrAlc <- (risk$ZAlc3 + risk$ZAlc4)/2 # Build average for Alcohol
#Sum up to build overall aggregate variable
risk$risksum <- risk$AvrSex + risk$AvrTob + risk$AvrAlc + risk$ZMar1
library(foreign)
# Read data from SPSS file into R
risk <- read.spss("data/Datafile Workshops.sav",
use.value.labels=TRUE,
max.value.labels=Inf,
to.data.frame=TRUE)
#View(risk)
attach(risk)
# 0.1 Prepare aggregate variables
# of risk behaviour
# Generate z-scores for variables using the scale() function
risk$ZSex3 <- scale(as.numeric(Sex3),
center = TRUE,
scale = TRUE)
risk$ZSex4 <- scale(as.numeric(Sex4),
center = TRUE,
scale = TRUE)
risk$ZTob3 <- scale(as.numeric(Tobacco3),
center = TRUE,
scale = TRUE)
risk$ZTob4 <- scale(as.numeric(Tobacco4),
center = TRUE,
scale = TRUE)
risk$ZAlc3 <- scale(as.numeric(Alcohol3),
center = TRUE,
scale = TRUE)
risk$ZAlc4 <- scale(as.numeric(Alcohol4),
center = TRUE,
scale = TRUE)
risk$ZMar1 <- scale(as.numeric(Drugs1),
center = TRUE,
scale = TRUE)
# Build averages
risk$AvrSex <- (risk$ZSex3+ risk$ZSex4)/2 # Build average for Sex
risk$AvrTob <- (risk$ZTob3 + risk$ZTob4)/2 # Build average for TObacco
risk$AvrAlc <- (risk$ZAlc3 + risk$ZAlc4)/2 # Build average for Alcohol
#Sum up to build overall aggregate variable
risk$risksum <- risk$AvrSex + risk$AvrTob + risk$AvrAlc + risk$ZMar1
attach(risk) # Set risk dataframe as working datafile
write.csv(risk, file="riskdata.csv")
setwd("C:/Users/petere/Documents/1I_ConfCongWorS/2015 EFPSA Congress Czech/bayes_workshop/data")
risk <- read.csv("riskdata_bayes.csv")
risk_bayes <- read.csv("riskdata_bayes.csv")
attach(risk_bayes)
# 3.1 Using regular multiple regression
summary(lm(risksum~ZPop+ZLike))
cor(risksum, ZLike)
cor(risksum, ZLike, na.rm="TRUE")
cor(risksum, ZLike, use="complete.obs")
library(Hmisc)
rcorr(risk_bayes, type="pearson") # type can be pearson or spearman
rcorr(risksum, type="pearson") # type can be pearson or spearman
cor.test(risksum, ZLike, use="complete.obs")
summary(lm(risksum~ZPop+ZLike))
summary(lm(risksum~ZPop+ZLike+ZPop*ZLike))
summary(lm(risksum~ZPop+ZLike))
library(foreign)
library(mirt)
library(psych)
# set working directory (own local path here!)
setwd('C:/Users/petere/Documents/I_ConfCongWorS/2014 Spring School Jena/MIRT Workshop/Exercises/')
setwd('C:/Users/petere/Documents/I_ConfCongWorS/2014 Spring School Jena/MIRT Workshop/Exercises/')
